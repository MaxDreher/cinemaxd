# Generated by Django 5.0 on 2023-12-09 14:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('TMDB_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('IMDB_ID', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('bio', models.TextField(null=True)),
                ('birthday', models.DateField(null=True)),
                ('imgLink', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'ACTORS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('TMDB_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('IMDB_ID', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('bio', models.TextField(null=True)),
                ('birthday', models.DateField(null=True)),
                ('imgLink', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'DIRECTORS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'GENRES',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('TMDB_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('IMDB_ID', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('movie', 'Movie'), ('series', 'Series')], max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('rating', models.FloatField(choices=[(0.5, '0.5'), (1.0, '1.0'), (1.5, '1.5'), (2.0, '2.0'), (2.5, '2.5'), (3.0, '3.0'), (3.5, '3.5'), (4.0, '4.0'), (4.5, '4.5'), (5.0, '5.0')], null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(null=True)),
                ('date', models.DateField(null=True)),
                ('timesSeen', models.IntegerField()),
                ('posterLink', models.CharField(max_length=255)),
                ('plot', models.TextField(null=True)),
                ('tagline', models.CharField(max_length=255, null=True)),
                ('releaseDate', models.DateField()),
                ('decade', models.CharField(max_length=255)),
                ('MPA', models.CharField(max_length=255, null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('seasons', models.IntegerField(null=True)),
                ('episodes', models.IntegerField(null=True)),
                ('languages', models.CharField(max_length=255, null=True)),
                ('countrys', models.CharField(max_length=255, null=True)),
                ('IMDB', models.FloatField(null=True)),
                ('TMDB', models.FloatField(null=True)),
                ('MC', models.IntegerField(null=True)),
                ('RTCritic', models.IntegerField(null=True)),
                ('RTUser', models.IntegerField(null=True)),
                ('LBXD', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'WATCHLOG',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProdCompany',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, null=True)),
                ('logo', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'PRODUCTION_COMPANIES',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'db_table': 'PROVIDERS',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MovieActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.actor')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.movie')),
            ],
            options={
                'db_table': 'MOVIE_ACTOR',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='cast',
            field=models.ManyToManyField(through='watchlist.MovieActor', to='watchlist.actor'),
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.director')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.movie')),
            ],
            options={
                'db_table': 'MOVIE_DIRECTOR',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='director',
            field=models.ManyToManyField(through='watchlist.MovieDirector', to='watchlist.director'),
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.movie')),
            ],
            options={
                'db_table': 'MOVIE_GENRE',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(through='watchlist.MovieGenre', to='watchlist.genre'),
        ),
        migrations.CreateModel(
            name='MovieCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.movie')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.prodcompany')),
            ],
            options={
                'db_table': 'MOVIE_COMPANY',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='prodCompany',
            field=models.ManyToManyField(through='watchlist.MovieCompany', to='watchlist.prodcompany'),
        ),
        migrations.CreateModel(
            name='WatchlistActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.actor')),
            ],
            options={
                'db_table': 'WATCHLIST_ACTOR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WatchlistCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.prodcompany')),
            ],
            options={
                'db_table': 'WATCHLIST_COMPANY',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WatchlistDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.director')),
            ],
            options={
                'db_table': 'WATCHLIST_DIRECTOR',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WatchlistGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.genre')),
            ],
            options={
                'db_table': 'WATCHLIST_GENRE',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WatchlistMovie',
            fields=[
                ('TMDB_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('IMDB_ID', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('movie', 'Movie'), ('series', 'Series')], max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('reason', models.TextField(null=True)),
                ('posterLink', models.CharField(max_length=255)),
                ('plot', models.TextField(null=True)),
                ('tagline', models.CharField(max_length=255, null=True)),
                ('releaseDate', models.DateField()),
                ('decade', models.CharField(max_length=255)),
                ('MPA', models.CharField(max_length=255, null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('seasons', models.IntegerField(null=True)),
                ('episodes', models.IntegerField(null=True)),
                ('languages', models.CharField(max_length=255, null=True)),
                ('countrys', models.CharField(max_length=255, null=True)),
                ('cast', models.ManyToManyField(through='watchlist.WatchlistActor', to='watchlist.actor')),
                ('director', models.ManyToManyField(through='watchlist.WatchlistDirector', to='watchlist.director')),
                ('genres', models.ManyToManyField(through='watchlist.WatchlistGenre', to='watchlist.genre')),
                ('prodCompany', models.ManyToManyField(through='watchlist.WatchlistCompany', to='watchlist.prodcompany')),
            ],
            options={
                'db_table': 'WATCHLIST',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='watchlistgenre',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.watchlistmovie'),
        ),
        migrations.AddField(
            model_name='watchlistdirector',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.watchlistmovie'),
        ),
        migrations.AddField(
            model_name='watchlistcompany',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.watchlistmovie'),
        ),
        migrations.AddField(
            model_name='watchlistactor',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.watchlistmovie'),
        ),
        migrations.CreateModel(
            name='WatchlistProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.provider')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='watchlist.watchlistmovie')),
            ],
            options={
                'db_table': 'WATCHLIST_PROVIDER',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='watchlistmovie',
            name='provider',
            field=models.ManyToManyField(through='watchlist.WatchlistProvider', to='watchlist.provider'),
        ),
        migrations.AlterUniqueTogether(
            name='movie',
            unique_together={('title', 'releaseDate')},
        ),
        migrations.AlterUniqueTogether(
            name='watchlistmovie',
            unique_together={('title', 'releaseDate')},
        ),
    ]
